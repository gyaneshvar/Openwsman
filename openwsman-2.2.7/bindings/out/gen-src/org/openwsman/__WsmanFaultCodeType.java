/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.openwsman;

public final class __WsmanFaultCodeType {
  public final static __WsmanFaultCodeType WSMAN_RC_OK = new __WsmanFaultCodeType("WSMAN_RC_OK", 0);
  public final static __WsmanFaultCodeType WSMAN_ACCESS_DENIED = new __WsmanFaultCodeType("WSMAN_ACCESS_DENIED");
  public final static __WsmanFaultCodeType WSA_ACTION_NOT_SUPPORTED = new __WsmanFaultCodeType("WSA_ACTION_NOT_SUPPORTED");
  public final static __WsmanFaultCodeType WSMAN_ALREADY_EXISTS = new __WsmanFaultCodeType("WSMAN_ALREADY_EXISTS");
  public final static __WsmanFaultCodeType WSEN_CANNOT_PROCESS_FILTER = new __WsmanFaultCodeType("WSEN_CANNOT_PROCESS_FILTER");
  public final static __WsmanFaultCodeType WSMAN_CANNOT_PROCESS_FILTER = new __WsmanFaultCodeType("WSMAN_CANNOT_PROCESS_FILTER");
  public final static __WsmanFaultCodeType WSMAN_CONCURRENCY = new __WsmanFaultCodeType("WSMAN_CONCURRENCY");
  public final static __WsmanFaultCodeType WSE_DELIVERY_MODE_REQUESTED_UNAVAILABLE = new __WsmanFaultCodeType("WSE_DELIVERY_MODE_REQUESTED_UNAVAILABLE");
  public final static __WsmanFaultCodeType WSMAN_DELIVERY_REFUSED = new __WsmanFaultCodeType("WSMAN_DELIVERY_REFUSED");
  public final static __WsmanFaultCodeType WSA_DESTINATION_UNREACHABLE = new __WsmanFaultCodeType("WSA_DESTINATION_UNREACHABLE");
  public final static __WsmanFaultCodeType WSMAN_ENCODING_LIMIT = new __WsmanFaultCodeType("WSMAN_ENCODING_LIMIT");
  public final static __WsmanFaultCodeType WSA_ENDPOINT_UNAVAILABLE = new __WsmanFaultCodeType("WSA_ENDPOINT_UNAVAILABLE");
  public final static __WsmanFaultCodeType WSMAN_EVENT_DELIVER_TO_UNUSABLE = new __WsmanFaultCodeType("WSMAN_EVENT_DELIVER_TO_UNUSABLE");
  public final static __WsmanFaultCodeType WSE_EVENT_SOURCE_UNABLE_TO_PROCESS = new __WsmanFaultCodeType("WSE_EVENT_SOURCE_UNABLE_TO_PROCESS");
  public final static __WsmanFaultCodeType WSEN_FILTER_DIALECT_REQUESTED_UNAVAILABLE = new __WsmanFaultCodeType("WSEN_FILTER_DIALECT_REQUESTED_UNAVAILABLE");
  public final static __WsmanFaultCodeType WSE_FILTERING_NOT_SUPPORTED = new __WsmanFaultCodeType("WSE_FILTERING_NOT_SUPPORTED");
  public final static __WsmanFaultCodeType WSEN_FILTERING_NOT_SUPPORTED = new __WsmanFaultCodeType("WSEN_FILTERING_NOT_SUPPORTED");
  public final static __WsmanFaultCodeType WSE_FILTERING_REQUESTED_UNAVAILABLE = new __WsmanFaultCodeType("WSE_FILTERING_REQUESTED_UNAVAILABLE");
  public final static __WsmanFaultCodeType WSMAN_FRAGMENT_DIALECT_NOT_SUPPORTED = new __WsmanFaultCodeType("WSMAN_FRAGMENT_DIALECT_NOT_SUPPORTED");
  public final static __WsmanFaultCodeType WSMAN_INTERNAL_ERROR = new __WsmanFaultCodeType("WSMAN_INTERNAL_ERROR");
  public final static __WsmanFaultCodeType WSMAN_INVALID_BOOKMARK = new __WsmanFaultCodeType("WSMAN_INVALID_BOOKMARK");
  public final static __WsmanFaultCodeType WSEN_INVALID_ENUMERATION_CONTEXT = new __WsmanFaultCodeType("WSEN_INVALID_ENUMERATION_CONTEXT");
  public final static __WsmanFaultCodeType WSE_INVALID_EXPIRATION_TIME = new __WsmanFaultCodeType("WSE_INVALID_EXPIRATION_TIME");
  public final static __WsmanFaultCodeType WSEN_INVALID_EXPIRATION_TIME = new __WsmanFaultCodeType("WSEN_INVALID_EXPIRATION_TIME");
  public final static __WsmanFaultCodeType WSE_INVALID_MESSAGE = new __WsmanFaultCodeType("WSE_INVALID_MESSAGE");
  public final static __WsmanFaultCodeType WSA_INVALID_MESSAGE_INFORMATION_HEADER = new __WsmanFaultCodeType("WSA_INVALID_MESSAGE_INFORMATION_HEADER");
  public final static __WsmanFaultCodeType WSMAN_INVALID_OPTIONS = new __WsmanFaultCodeType("WSMAN_INVALID_OPTIONS");
  public final static __WsmanFaultCodeType WSMAN_INVALID_PARAMETER = new __WsmanFaultCodeType("WSMAN_INVALID_PARAMETER");
  public final static __WsmanFaultCodeType WXF_INVALID_REPRESENTATION = new __WsmanFaultCodeType("WXF_INVALID_REPRESENTATION");
  public final static __WsmanFaultCodeType WSMAN_INVALID_SELECTORS = new __WsmanFaultCodeType("WSMAN_INVALID_SELECTORS");
  public final static __WsmanFaultCodeType WSA_MESSAGE_INFORMATION_HEADER_REQUIRED = new __WsmanFaultCodeType("WSA_MESSAGE_INFORMATION_HEADER_REQUIRED");
  public final static __WsmanFaultCodeType WSMAN_NO_ACK = new __WsmanFaultCodeType("WSMAN_NO_ACK");
  public final static __WsmanFaultCodeType WSMAN_QUOTA_LIMIT = new __WsmanFaultCodeType("WSMAN_QUOTA_LIMIT");
  public final static __WsmanFaultCodeType WSMAN_SCHEMA_VALIDATION_ERROR = new __WsmanFaultCodeType("WSMAN_SCHEMA_VALIDATION_ERROR");
  public final static __WsmanFaultCodeType WSEN_TIMED_OUT = new __WsmanFaultCodeType("WSEN_TIMED_OUT");
  public final static __WsmanFaultCodeType WSMAN_TIMED_OUT = new __WsmanFaultCodeType("WSMAN_TIMED_OUT");
  public final static __WsmanFaultCodeType WSE_UNABLE_TO_RENEW = new __WsmanFaultCodeType("WSE_UNABLE_TO_RENEW");
  public final static __WsmanFaultCodeType WSE_UNSUPPORTED_EXPIRATION_TYPE = new __WsmanFaultCodeType("WSE_UNSUPPORTED_EXPIRATION_TYPE");
  public final static __WsmanFaultCodeType WSEN_UNSUPPORTED_EXPIRATION_TYPE = new __WsmanFaultCodeType("WSEN_UNSUPPORTED_EXPIRATION_TYPE");
  public final static __WsmanFaultCodeType WSMAN_UNSUPPORTED_FEATURE = new __WsmanFaultCodeType("WSMAN_UNSUPPORTED_FEATURE");
  public final static __WsmanFaultCodeType SOAP_FAULT_VERSION_MISMATCH = new __WsmanFaultCodeType("SOAP_FAULT_VERSION_MISMATCH");
  public final static __WsmanFaultCodeType SOAP_FAULT_MUSTUNDERSTAND = new __WsmanFaultCodeType("SOAP_FAULT_MUSTUNDERSTAND");
  public final static __WsmanFaultCodeType WSMB_POLYMORPHISM_MODE_NOT_SUPPORTED = new __WsmanFaultCodeType("WSMB_POLYMORPHISM_MODE_NOT_SUPPORTED");
  public final static __WsmanFaultCodeType WSMAN_UNKNOWN = new __WsmanFaultCodeType("WSMAN_UNKNOWN");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static __WsmanFaultCodeType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + __WsmanFaultCodeType.class + " with value " + swigValue);
  }

  private __WsmanFaultCodeType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private __WsmanFaultCodeType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private __WsmanFaultCodeType(String swigName, __WsmanFaultCodeType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static __WsmanFaultCodeType[] swigValues = { WSMAN_RC_OK, WSMAN_ACCESS_DENIED, WSA_ACTION_NOT_SUPPORTED, WSMAN_ALREADY_EXISTS, WSEN_CANNOT_PROCESS_FILTER, WSMAN_CANNOT_PROCESS_FILTER, WSMAN_CONCURRENCY, WSE_DELIVERY_MODE_REQUESTED_UNAVAILABLE, WSMAN_DELIVERY_REFUSED, WSA_DESTINATION_UNREACHABLE, WSMAN_ENCODING_LIMIT, WSA_ENDPOINT_UNAVAILABLE, WSMAN_EVENT_DELIVER_TO_UNUSABLE, WSE_EVENT_SOURCE_UNABLE_TO_PROCESS, WSEN_FILTER_DIALECT_REQUESTED_UNAVAILABLE, WSE_FILTERING_NOT_SUPPORTED, WSEN_FILTERING_NOT_SUPPORTED, WSE_FILTERING_REQUESTED_UNAVAILABLE, WSMAN_FRAGMENT_DIALECT_NOT_SUPPORTED, WSMAN_INTERNAL_ERROR, WSMAN_INVALID_BOOKMARK, WSEN_INVALID_ENUMERATION_CONTEXT, WSE_INVALID_EXPIRATION_TIME, WSEN_INVALID_EXPIRATION_TIME, WSE_INVALID_MESSAGE, WSA_INVALID_MESSAGE_INFORMATION_HEADER, WSMAN_INVALID_OPTIONS, WSMAN_INVALID_PARAMETER, WXF_INVALID_REPRESENTATION, WSMAN_INVALID_SELECTORS, WSA_MESSAGE_INFORMATION_HEADER_REQUIRED, WSMAN_NO_ACK, WSMAN_QUOTA_LIMIT, WSMAN_SCHEMA_VALIDATION_ERROR, WSEN_TIMED_OUT, WSMAN_TIMED_OUT, WSE_UNABLE_TO_RENEW, WSE_UNSUPPORTED_EXPIRATION_TYPE, WSEN_UNSUPPORTED_EXPIRATION_TYPE, WSMAN_UNSUPPORTED_FEATURE, SOAP_FAULT_VERSION_MISMATCH, SOAP_FAULT_MUSTUNDERSTAND, WSMB_POLYMORPHISM_MODE_NOT_SUPPORTED, WSMAN_UNKNOWN };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

